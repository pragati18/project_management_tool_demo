{"ast":null,"code":"var _class, _temp;\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar LayoutHelper = (_temp = _class = function () {\n  function LayoutHelper() {\n    _classCallCheck(this, LayoutHelper);\n  }\n\n  LayoutHelper.sidebarToggle = function sidebarToggle(toggle) {\n    var minimize = arguments.length ? toggle : !this.elClassList.contains('sidebar-minimized');\n    this.sidebarMinimize(minimize);\n    this.brandMinimize(minimize);\n    this.sidebarPSToggle(!minimize);\n    /*remove PS on sidebar minimized*/\n  };\n\n  LayoutHelper.sidebarMinimize = function sidebarMinimize(force) {\n    return this.toggleClass('sidebar-minimized', force);\n  };\n\n  LayoutHelper.brandMinimize = function brandMinimize(force) {\n    this.toggleClass('brand-minimized', force);\n  }; //  sidebar perfect scrollbar ugly hack\n\n\n  LayoutHelper.sidebarPSToggle = function sidebarPSToggle(toggle) {\n    if (this.isOnMobile()) {\n      toggle = true;\n    } else {\n      var isSidebarMinimized = document.body.classList.contains('sidebar-minimized') || false;\n      toggle = !isSidebarMinimized;\n    }\n\n    var ps = {\n      y: {\n        rail: {},\n        thumb: {}\n      }\n    };\n    var isRtl = getComputedStyle(document.documentElement).direction === 'rtl';\n    var sidebar = document.querySelector('.sidebar-nav');\n    ps.y.rail.on = document.querySelector('.sidebar-nav .ps__rail-y');\n    ps.y.rail.off = document.querySelector('.sidebar-nav .ps__rail-y-off');\n    ps.y.thumb.on = document.querySelector('.sidebar-nav .ps__thumb-y');\n    ps.y.thumb.off = document.querySelector('.sidebar-nav .ps__thumb-y-off');\n\n    if (sidebar) {\n      if (toggle) {\n        sidebar.classList.add('ps');\n        sidebar.classList.add('ps-container');\n        sidebar.classList.add('ps--active-y');\n\n        if (ps.y.rail.off) {\n          ps.y.rail.off.classList.add('ps__rail-y');\n          ps.y.rail.off.removeAttribute('style');\n          ps.y.rail.off.style.left = isRtl ? '0px' : 'unset';\n          ps.y.rail.off.style.right = isRtl ? 'unset' : '0px';\n          ps.y.rail.off.classList.remove('ps__rail-y-off');\n        }\n\n        if (ps.y.thumb.off) {\n          ps.y.thumb.off.removeAttribute('style');\n          ps.y.thumb.off.classList.add('ps__thumb-y');\n          ps.y.thumb.off.classList.remove('ps__thumb-y-off');\n        }\n      } else {\n        if (ps.y.rail.on) {\n          ps.y.rail.on.classList.add('ps__rail-y-off');\n          ps.y.rail.on.removeAttribute('style');\n          ps.y.rail.on.classList.remove('ps__rail-y');\n        }\n\n        if (ps.y.thumb.on) {\n          ps.y.thumb.on.classList.add('ps__thumb-y-off');\n          ps.y.thumb.on.removeAttribute('style');\n          ps.y.thumb.on.classList.remove('ps__thumb-y');\n        }\n\n        sidebar.classList.remove('ps');\n        sidebar.classList.remove('ps-container');\n        sidebar.classList.remove('ps--active-y');\n      }\n    }\n  };\n\n  LayoutHelper.toggleClass = function toggleClass(className, force) {\n    if (force === true) {\n      this.elClassList.add(className);\n    } else if (force === false) {\n      this.elClassList.remove(className);\n    } else {\n      this.elClassList.toggle(className);\n    }\n\n    return this.elClassList.contains(className);\n  };\n\n  LayoutHelper.isOnMobile = function isOnMobile() {\n    var onMobile = false;\n\n    try {\n      var minimizerElement = document.querySelector('.sidebar-minimizer');\n\n      if (minimizerElement) {\n        onMobile = getComputedStyle(minimizerElement).getPropertyValue('display') === 'none';\n      } else {\n        var sidebarElement = document.querySelector('.sidebar .sidebar-nav');\n        sidebarElement && (onMobile = getComputedStyle(sidebarElement).getPropertyValue('overflow-y') === 'auto');\n      }\n    } catch (ignore) {\n      // eslint-disable-next-line\n      console.warn('CoreUI isOnMobile failed to getComputedStyle', ignore);\n    }\n\n    return onMobile;\n  };\n\n  return LayoutHelper;\n}(), _class.elClassList = document.body.classList, _temp);\nexport default LayoutHelper;","map":null,"metadata":{},"sourceType":"module"}